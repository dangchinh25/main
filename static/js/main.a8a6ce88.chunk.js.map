{"version":3,"sources":["Page/About.js","Components/Header.js","Page/Home.js","Page/PhotoGalery.js","Projects/Box.js","Projects/Grid.js","Projects/Buttons.js","Projects/GameOfLife.js","Projects/ProjectHomePage.js","App.js","serviceWorker.js","index.js"],"names":["About","Container","className","Row","Col","xs","sm","md","Figure","Image","src","thumbnail","Caption","to","href","target","Header","props","Navbar","bg","Brand","Nav","Link","Button","variant","onClick","changeTheme","Home","PhotoGalery","useState","gallery","state","setState","API_URL","a","fetch","then","res","json","data","console","log","photos","photo","useEffect","fetchAPI","map","item","id","secret","Box","selectBox","row","col","this","boxClass","React","Component","Grid","width","cols","rowsArr","i","rows","j","boxId","gridFull","push","key","style","Buttons","handleSelect","evt","gridSize","ButtonToolbar","playButton","pauseButton","clear","slow","fast","seed","DropdownButton","title","onSelect","Dropdown","Item","eventKey","Main","arrayClone","arr","JSON","parse","stringify","gridCopy","Math","floor","random","clearInterval","intervalID","setInterval","play","speed","grid","Array","fill","generation","size","g","g2","count","bind","ProjectHomePage","Jumbotron","GlobalStyle","createGlobalStyle","theme","mode","App","setTheme","exact","path","component","GameOfLife","PhotoGallery","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8a6ce88.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {Container, Image, Row, Col, Figure, Nav} from \"react-bootstrap\"\r\nimport {Link} from \"react-router-dom\"\r\nimport \"./About.css\"\r\n\r\nfunction About() {\r\n    return (\r\n        <Container className=\"about-container\">\r\n            <Row>\r\n                <h2>About</h2>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={10} sm={10} md={6}>\r\n                    <Figure>\r\n                        <Figure.Image src=\"Asset/IMG_4969.jpg\" thumbnail/>\r\n                        <Figure.Caption>\r\n                            Stand tall over challenges.\r\n                        </Figure.Caption>\r\n                    </Figure>\r\n                </Col>\r\n            </Row>\r\n             <Row>\r\n                <Col md={10}>\r\n                    <p>Hi, thanks for dropping by! </p>\r\n                    <p> \r\n                        My name is Chinh Le. I'm a freshman at The University of Texas at Dallas, major in Computer Science. \r\n                        My interest includes app and game develepment, virtual reality technology, and photography.\r\n                    </p>\r\n                    <p> \r\n                        Check out my projects at <Link to=\"/proj\">Projects</Link>. \r\n                        Check out my photos at <Link to=\"/gallery\">Gallery</Link>. \r\n                    </p>\r\n                    <p>Currently exploring ReactNative.</p>\r\n                    <br/>\r\n                    <span className=\"contact\">Contact: \r\n                        <a href=\"https://www.linkedin.com/in/chinh-le-a20113192/\" target=\"_blank\">  Linkedin</a>\r\n                        <a href=\"https://github.com/dangchinh25\" target=\"_blank\"> Github</a>\r\n                        <a href=\"https://drive.google.com/file/d/1wXE1lHl5wCA8TGF_r8v8gNOTmT9f20X_/view?usp=sharing\" target=\"_blank\"> Resume</a>\r\n                    </span>\r\n                </Col>\r\n                \r\n             </Row>\r\n            \r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default About","import React, {useState} from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {Navbar, Nav, Container, Button} from \"react-bootstrap\"\r\nimport \"./Header.css\"\r\n\r\nfunction Header(props) {\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <Navbar bg=\"light\">\r\n                <Container>\r\n                    <Navbar.Brand>\r\n                        <Link to=\"/\">DangChinh</Link>\r\n                    </Navbar.Brand>\r\n                    <div className=\"nav-item\">\r\n                        {/* <Nav.Link>\r\n                            <Link to=\"/blogs\">Blogs</Link>\r\n                        </Nav.Link> */}\r\n                        <Nav.Link>\r\n                            <Link to=\"/about\">About</Link>\r\n                        </Nav.Link>\r\n                        <Nav.Link>\r\n                            <Link to=\"/gallery\">Gallery</Link>\r\n                        </Nav.Link>\r\n                        <Nav.Link>\r\n                            <Link to=\"/proj\">Projects</Link>\r\n                        </Nav.Link>\r\n                        <Button variant=\"light\" onClick={props.changeTheme} >\r\n                            <i className=\"fa fa-adjust\"></i>\r\n                        </Button>\r\n                    </div>\r\n                </Container>\r\n            </Navbar>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <h1>Home</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React, {useState, useEffect} from \"react\"\r\nimport {Container, Row, Col, Image, Figure} from \"react-bootstrap\"\r\n\r\nimport \"./PhotoGallery.css\"\r\n\r\nfunction PhotoGalery() {\r\n\r\n\r\n    const [state, setState] = useState({\r\n        gallery : []\r\n    })\r\n\r\n    //base URL for the gallery\r\n    let API_URL = `https://api.flickr.com/services/rest/?method=flickr.people.getPhotos&api_key=f475fca09b09eab4f43334a38aa05a35&user_id=185265760@N03&format=json&nojsoncallback=1`\r\n\r\n    async function fetchAPI() {\r\n        await fetch(API_URL)\r\n            .then(res => res.json())\r\n            .then(data =>{\r\n                console.log(data)\r\n                setState({gallery: data.photos.photo})\r\n            })\r\n    }\r\n\r\n    //componentDidMount to get the initial data\r\n    useEffect(() =>{\r\n        fetchAPI()\r\n    }, [])\r\n\r\n    return(\r\n        <Container>\r\n            <h3>Gallery</h3>\r\n            {\r\n                state.gallery.map(item => \r\n                    <Figure>\r\n                        <Figure.Image \r\n                            src={`https://farm66.staticflickr.com/1/${item.id}_${item.secret}_q.jpg` } thumbnail \r\n                        />\r\n                    </Figure>\r\n                )\r\n            }\r\n            <Row>\r\n                <Col md={4}>\r\n                    \r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PhotoGalery","import React from \"react\"\r\n\r\nclass Box extends React.Component {\r\n    selectBox = () => {\r\n        this.props.selectBox(this.props.row, this.props.col )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div \r\n                className={this.props.boxClass}\r\n                id = {this.props.id}\r\n                onClick = {this.selectBox}>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Box\r\n\r\n","import React from \"react\"\r\nimport Box from \"./Box\"\r\n\r\nclass Grid extends React.Component {\r\n\r\n    render() {\r\n        const width = this.props.cols * 14 \r\n        var rowsArr = []\r\n\r\n        var boxClass = \"\"\r\n\r\n        for (var i=0; i<this.props.rows; i++) {\r\n            for (var j=0; j<this.props.cols; j++) {\r\n                let boxId = i + \"_\" + j;\r\n\r\n                boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box off\"\r\n                rowsArr.push (\r\n                    <Box \r\n                        boxClass={boxClass}\r\n                        key = {boxId}\r\n                        boxId = {boxId}\r\n                        row = {i}\r\n                        col = {j}\r\n                        selectBox = {this.props.selectBox}\r\n                    />\r\n                )\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"grid\" style={{width: width}}>\r\n                {rowsArr}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Grid","import React from \"react\"\r\nimport {ButtonToolbar, Dropdown, DropdownButton, Button} from \"react-bootstrap\"\r\n\r\nclass Buttons extends React.Component {\r\n\r\n    handleSelect = (evt)=> {\r\n        this.props.gridSize(evt)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"center\">\r\n                <ButtonToolbar>\r\n                    <Button variant=\"outline-secondary\" onClick={this.props.playButton}>\r\n                        Play\r\n                    </Button>\r\n                    <Button variant=\"outline-secondary\" onClick={this.props.pauseButton}>\r\n                        Pause\r\n                    </Button>\r\n                    <Button variant=\"outline-secondary\" onClick={this.props.clear}>\r\n                        Clear\r\n                    </Button>\r\n                    <Button variant=\"outline-secondary\" onClick={this.props.slow}>\r\n                        Slow\r\n                    </Button>\r\n                    <Button variant=\"outline-secondary\" onClick={this.props.fast}>\r\n                        Fast\r\n                    </Button>\r\n                    <Button variant=\"outline-secondary\" onClick={this.props.seed}>\r\n                        Seed\r\n                    </Button>\r\n\r\n                    <DropdownButton \r\n                        title =\"Grid Size\"\r\n                        variant = \"secondary\"\r\n                        id=\"size-menu\"\r\n                        onSelect = {this.handleSelect}\r\n                    >\r\n                        <Dropdown.Item eventKey=\"1\">20x10</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">50x30</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">70x50</Dropdown.Item>\r\n                    </DropdownButton>\r\n\r\n                </ButtonToolbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Buttons","import React from \"react\"\r\nimport Grid from \"./Grid\"\r\nimport Buttons from \"./Buttons\"\r\nimport \"./GameOfLife.css\"\r\n\r\nclass Main extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.speed = 100\r\n        this.rows = 30\r\n        this.cols = 50\r\n        this.state = {\r\n            generation: 0,\r\n            gridFull: Array(this.rows).fill().map(() => Array(this.cols).fill(false))\r\n        }\r\n        this.selectBox = this.selectBox.bind(this)\r\n        this.arrayClone = this.arrayClone.bind(this)\r\n        this.seed = this.seed.bind(this)\r\n    }\r\n\r\n    //function to clone an array since we have to create a clone array to set new state to it\r\n    arrayClone = (arr) => {\r\n        return JSON.parse(JSON.stringify(arr))\r\n    }\r\n\r\n    //function to set a state of a selected box \r\n    selectBox = (row, col) => { \r\n        let gridCopy = this.arrayClone(this.state.gridFull)\r\n        gridCopy[row][col] = !gridCopy[row][col]\r\n        this.setState({\r\n            gridFull:gridCopy\r\n        })\r\n    }\r\n\r\n    //function to seed the grid with randomly appear box\r\n    seed = () => {\r\n        let gridCopy = this.arrayClone(this.state.gridFull)\r\n        for (let i=0; i< this.rows; i++) {\r\n            for (let j=0; j<this.cols; j++) {\r\n                if (Math.floor(Math.random()*4) === 1) {\r\n                    gridCopy[i][j] = true\r\n                }\r\n            }\r\n        }\r\n        this.setState({\r\n            gridFull:gridCopy\r\n        })\r\n    }\r\n\r\n    playButton = () => {\r\n        clearInterval(this.intervalID)\r\n        this.intervalID = setInterval(this.play, this.speed)\r\n    }\r\n\r\n    pauseButton = () => {\r\n        clearInterval(this.intervalID)\r\n    }\r\n\r\n    fast = () => {\r\n        this.speed = 100\r\n        this.playButton()\r\n    }\r\n\r\n    slow = () => {\r\n        this.speed = 1000\r\n        this.playButton()\r\n    }\r\n\r\n    clear = () => {\r\n        var grid = Array(this.rows).fill().map(() => Array(this.cols).fill(false))\r\n        this.setState({\r\n            gridFull: grid,\r\n            generation:0\r\n        })\r\n    }\r\n\r\n    gridSize = (size) => {\r\n        switch (size) {\r\n            case \"1\":\r\n                this.cols =20\r\n                this.rows = 10\r\n            break\r\n\r\n            case \"2\":\r\n                this.cols =50\r\n                this.rows = 30\r\n            break\r\n\r\n            default:\r\n                this.cols =70\r\n                this.rows = 50\r\n        }\r\n        this.clear()\r\n    }\r\n\r\n    //main playing function\r\n    play = () => {\r\n        let g = this.state.gridFull\r\n        let g2 = this.arrayClone(this.state.gridFull)//clone arrey to set state\r\n\r\n        for (let i=0; i< this.rows; i++) {\r\n            for (let j=0; j< this.cols; j++) {\r\n                let count =0 //variable to count the number of true neighbor grid\r\n                //check 8 adjacent neighborhood to see if they are true, if they are true then increase count\r\n                if (i>0) if(g[i-1][j]) count++\r\n                if (i>0 && j>0) if (g[i-1][j-1]) count++\r\n                if (i>0 && j<this.cols-1) if (g[i-1][j+1]) count++\r\n                if (j<this.cols-1) if (g[i][j+1]) count++\r\n                if (j>0) if (g[i][j-1]) count++\r\n                if (i<this.rows-1) if (g[i+1][j]) count++\r\n                if (i<this.rows-1 && j>0) if (g[i+1][j-1]) count++\r\n                if (i<this.rows-1 && j<this.cols-1) if (g[i+1][j+1]) count++\r\n                //follow the rule of life and death of the game to set the corresponding value to the clone array\r\n                if (g[i][j] && (count<2||count>3)) g2[i][j] = false\r\n                if (!g[i][j] && count===3) g2[i][j] = true\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            gridFull:g2,\r\n            generation: this.state.generation+1\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.seed()\r\n        this.playButton()\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"game-of-life\">\r\n                <h1>The Game of Life</h1>\r\n                <Buttons\r\n                    playButton = {this.playButton}\r\n                    pauseButton = {this.pauseButton}\r\n                    slow = {this.slow}\r\n                    fast = {this.fast}\r\n                    clear = {this.clear}\r\n                    seed = {this.seed}\r\n                    gridSize = {this.gridSize}\r\n                />\r\n                <Grid \r\n                    gridFull={this.state.gridFull}\r\n                    rows = {this.rows}\r\n                    cols = {this.cols}\r\n                    selectBox = {this.selectBox}\r\n                />\r\n                <h2>Generation: {this.state.generation} </h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {Jumbotron, Container, Button, Navbar, Nav} from \"react-bootstrap\"\r\n\r\nimport \"./ProjectHomePage.css\"\r\n\r\nfunction ProjectHomePage () {\r\n    return (\r\n        <div className=\"proj-home-page\">\r\n            <Container>\r\n                <Jumbotron className=\"overview\">\r\n                        <h1>Projects List</h1>\r\n                        <p>\r\n                            A place where I put together all of my personal projects.\r\n                        </p>\r\n                </Jumbotron>\r\n                <Jumbotron className=\"project-detail project-1\">\r\n                        <h1>Game of Life</h1>\r\n                        <p>\r\n                            An implementation of the game of life by John Conway.\r\n                        </p>\r\n                        <Button variant=\"secondary\">\r\n                            <Link to=\"/proj/gameoflife\">Learn more</Link>\r\n                        </Button>\r\n                </Jumbotron>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectHomePage","import React, {useState} from 'react';\nimport {Route, HashRouter as Router} from \"react-router-dom\"\nimport {ThemeProvider, createGlobalStyle} from \"styled-components\"\n\nimport About from './Page/About';\nimport Header from './Components/Header';\nimport Home from \"./Page/Home\"\nimport PhotoGallery from \"./Page/PhotoGalery\"\nimport GameOfLife from \"./Projects/GameOfLife\"\nimport ProjectHomePage from \"./Projects/ProjectHomePage\"\n\nimport \"./App.css\"\n\n//styled components to switch between dark mode and lightmode\nconst GlobalStyle = createGlobalStyle`\nbody {\n  background-color: ${props => props.theme.mode === 'dark' ? '#292a2d' : '#EEE'};\n  color: ${props => props.theme.mode === 'dark' ? '#EEE' : '#292a2d'};\n}\na {\n  color: ${props => props.theme.mode === 'dark' ? '#EEE' : '#292a2d'};\n}\n.header a {\n  color: ${props => props.theme.mode === 'dark' ? '#EEE' : '#292a2d'};\n}\n.header nav {\n  background-color: ${props => props.theme.mode === 'dark' ? '#35363a' : '#f8f9fa'} !important;\n}\n\n.game-of-life h1,h2 {\n  color: ${props => props.theme.mode === 'dark' ? '#EEE' : '#292a2d'};\n}\n\n.jumbotron {\n  color: #292a2d;\n}\n`\n\nfunction App() {\n  const [theme, setTheme] = useState({mode: 'light'})\n\n  function changeTheme() {\n    setTheme(theme.mode === 'dark' \n      ? {mode:'light'}\n      : {mode: 'dark'}\n    )\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <div className=\"App\">\n        <Router>\n          <div>\n              <Header changeTheme={changeTheme} /> \n              <Route exact path=\"/proj\" component={ProjectHomePage} />\n              <Route path=\"/proj/gameoflife\" component={GameOfLife} />\n              <Route exact path=\"/\" component={About} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/gallery\" component={PhotoGallery} />\n          </div>\n        </Router>\n        \n      </div>\n    </ThemeProvider>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}